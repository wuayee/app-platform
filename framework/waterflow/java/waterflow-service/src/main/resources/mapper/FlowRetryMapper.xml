<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="modelengine.fit.waterflow.flowsengine.persist.mapper.FlowRetryMapper">
    <resultMap id="objectMap"
               type="modelengine.fit.waterflow.flowsengine.persist.po.FlowRetryPO">
        <id column="entity_id" property="entityId"/>
        <result column="entity_type" property="entityType"/>
        <result column="next_retry_time" property="nextRetryTime"/>
        <result column="last_retry_time" property="lastRetryTime"/>
        <result column="retry_count" property="retryCount"/>
        <result column="version" property="version"/>
    </resultMap>

    <sql id="table">flow_retry</sql>

    <sql id="columns">entity_id, entity_type, next_retry_time, last_retry_time, retry_count, version</sql>

    <insert id="batchCreate">
        INSERT INTO
        <include refid="table"/>
        (<include refid="columns"/>)
        VALUES
        <foreach collection="flowRetryList" item="flowRetry" separator=",">
            (#{flowRetry.entityId},
            #{flowRetry.entityType},
            #{flowRetry.nextRetryTime},
            #{flowRetry.lastRetryTime},
            #{flowRetry.retryCount},
            #{flowRetry.version})
        </foreach>
    </insert>

    <select id="find" resultMap="objectMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="table"/>
        WHERE entity_id = #{entityId}
    </select>

    <select id="filterByNextRetryTime" resultMap="objectMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="table"/>
        WHERE next_retry_time <![CDATA[ <= ]]> #{time}
        <if test="exceptEntityIds != null and exceptEntityIds.size() > 0">
            AND
            entity_id NOT IN
            <foreach item="item" index="index" collection="exceptEntityIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="batchUpdateRetryRecord">
        <foreach collection="flowRetryList" item="flowRetry" separator=";">
            UPDATE
            <include refid="table"/>
            SET
            next_retry_time = #{flowRetry.nextRetryTime},
            last_retry_time = #{flowRetry.lastRetryTime},
            retry_count = #{flowRetry.retryCount},
            version = version + 1
            WHERE
            entity_id = #{flowRetry.entityId} AND version = #{flowRetry.version}
        </foreach>
    </update>

    <update id="batchUpdateNextRetryTime">
        <foreach collection="entityIdList" item="entityId" separator=";">
            UPDATE
            <include refid="table"/>
            SET
            next_retry_time = #{nextRetryTime},
            version = version + 1
            WHERE
            entity_id = #{entityId}
        </foreach>
    </update>

    <update id="batchDelete">
        DELETE
        FROM
        <include refid="table"/>
        WHERE entity_id
        IN
        <foreach item="item" index="index" collection="entityIdList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="getNextFlowRetry" resultMap="objectMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="table"/>
        WHERE next_retry_time <![CDATA[ > ]]> #{time}
        ORDER BY next_retry_time ASC
        LIMIT 1
    </select>

    <select id="hasRetryData" resultType="int">
        SELECT
        COUNT(*)
        FROM
        <include refid="table"/>
    </select>
</mapper>
