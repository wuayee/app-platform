#!/bin/bash

# 获取脚本所在的路径
CURRENT_DIR=$(pwd)
CMD_PATH=$(dirname $(readlink -f $0))

# 定义版本号
VERSION="3.4.3-SNAPSHOT"

function start {
    local DEBUG_ARGS=""
    if [ "$1" == "debug" ]; then
        DEBUG_ARGS=" -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
    fi

    # 初始化变量
    JAVA_ARGS=""
    PROGRAM_ARGS=""

    # 迭代所有的参数，跳过第一个参数（"start"或"debug"）
    shift
    for arg in "$@"; do
        # 检查参数是否以-开头
        if [[ $arg == -* ]]; then
            JAVA_ARGS="$JAVA_ARGS $arg"
        else
            PROGRAM_ARGS="$PROGRAM_ARGS $arg"
        fi
    done

    cd $CMD_PATH/..
    # 查找符合 fit-discrete-launcher-[version].jar 格式的文件
    JAR_FILE=$(ls | grep "fit-discrete-launcher-.*.jar" | head -n 1)
    if [ -z "$JAR_FILE" ]; then
        echo "No fit-discrete-launcher-[version].jar file found."
    else
        # 构造并运行 Java 命令
        echo "Running command: java${DEBUG_ARGS}${JAVA_ARGS} -D\"plugin.fit.dynamic.plugin.directory=${CURRENT_DIR}\" -jar ${JAR_FILE}${PROGRAM_ARGS}"
        java${DEBUG_ARGS}${JAVA_ARGS} -D"plugin.fit.dynamic.plugin.directory=${CURRENT_DIR}" -jar ${JAR_FILE}${PROGRAM_ARGS}
    fi
}

function version {
    echo "Version: $VERSION"
}

function help {
    echo "Usage: fit <command> [arguments]"
    echo "Commands:"
    echo "  start    Start the application"
    echo "  debug    Start the application in debug mode"
    echo "  version  Display the version number"
    echo "  help     Display this help message"
}

# 根据输入的参数执行相应的函数
case "$1" in
    start)
        start "$@"
        ;;
    debug)
        start "$@"
        ;;
    version)
        version
        ;;
    help)
        help
        ;;
    *)
        echo "Unknown command: $1"
        echo "Run 'fit help' for usage."
        exit 1
esac
