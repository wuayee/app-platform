/*
* Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
* Description:
* Author: auto generated by FIT IDL
* Date:
*/
#include <fit/external/framework/plugin_activator.hpp>
#include <fit/fit_log.h>
#include <domain/trace/tracer.hpp>
#include <domain/remote_invoker.hpp>
namespace {
const char * const GLOBAL_OPEN_TRACE_KEY = "tracer.process.enabled.value";
const char * const LOCAL_OPEN_TRACE_KEY = "tracer.process.local.enabled.value";
const char * const TRACER_ENABLED_KEY = "tracer.enabled.value";
const char * const IS_ENABLE_ACCESS_TOKEN = "secure-access.enable";
/**
 * @Description: it is called when plugin start, only call once
 */
FitCode Start(::Fit::Framework::PluginContext* context)
{
    const auto &config = context->GetConfig();
    ::Fit::Tracer::GetInstance()->SetGlobalTraceEnabled(config->Get(GLOBAL_OPEN_TRACE_KEY).AsBool(false));
    ::Fit::Tracer::GetInstance()->SetLocalTraceEnabled(config->Get(LOCAL_OPEN_TRACE_KEY).AsBool(false));
    ::Fit::Tracer::GetInstance()->SetEnabled(config->Get(TRACER_ENABLED_KEY).AsBool(false));
    FIT_LOG_INFO("Broker client, global tracer enabled = %d, local tracer enabled = %d.",
        int(Fit::Tracer::GetInstance()->IsGlobalTraceEnabled()),
        int(Fit::Tracer::GetInstance()->IsLocalTraceEnabled()));
    Fit::AuthenticationForRemoteInvoker::SetIsEnableAccessToken(config->Get(IS_ENABLE_ACCESS_TOKEN).AsBool(false));
    return FIT_OK;
}

/**
 * @Description: it is called when plugin stop, only call once
 */
FitCode Stop()
{
    // should add plugin stop code, such as: close task, release resource
    return FIT_OK;
}

FIT_REGISTRATIONS
{
    Fit::Framework::PluginActivatorRegistrar()
        .SetStart(Start)
        .SetStop(Stop);
}
} // LCOV_EXCL_LINE