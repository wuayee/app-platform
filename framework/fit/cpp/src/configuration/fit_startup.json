{
  "app": {
    "name": "debug"
  },
  "worker": {
    "id": "test",
    "directory": "../"
  },
  "components": [
  ],
  "plugins": {
    "system-plugins": [
      {
        "name": "system_property",
        "location": "lib/libFitPlugin_system_property.so",
        "absolutely": false,
        "level": 0
      },
      {
        "location": "lib/libFitPlugin_registry_address_config.so"
      },
      {
        "location": "lib/libFitPlugin_loadbalance.so"
      },
      {
        "location": "lib/libFitPlugin_broker_server_grpc.so"
      },
      {
        "location": "lib/libFitPlugin_registry_listener.so"
      },
      {
        "location": "lib/libFitPlugin_heartbeat_client.so"
      },
      {
        "location": "lib/libFitPlugin_matata_conf_client_fit_config_client_cpp.so"
      },
      {
        "location": "lib/libFitPlugin_matata_notification_client_kafka_cpp.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_heartbeat_heartbeat.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_heartbeat_heartbeatAddressChange.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_heartbeat_leave.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_heartbeat_queryHeartbeatAddressList.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_heartbeat_subscribeHeartbeat.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_heartbeat_unsubscribeHeartbeat.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_server_download.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_server_get.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_server_set.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_server_subscribe.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_server_unsubscribe.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_server_upload.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_subscription_server_append.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_conf_subscription_server_remove.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_notification_client_consume.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_notification_server_publish.so"
      },
      {
        "location": "lib/libFitConverterGPB_matata_notification_server_subscribe.so"
      },
      {
        "location": "lib/libFitConverterGPB_fit_matata_tagCenter_tagger_tag.so"
      },
      {
        "location": "lib/libFitConverterGPB_fitLab_matata_ruleEngine_rule_json_execute.so"
      }
    ],
    "user-plugins": [
    ],
    "converters": {
      "directory": "converters/",
      "match": [
        "libFitConverterG*"
      ]
    }
  },
  "environment": "debug",
  "environment_chain": "debug,alpha,prod",
  "global_open_trace": true,
  "local_open_trace": true,
  "broker_config_file": "broker_configuration.json",
  "config_file_for_upload": "genericables_config.properties",
  "registry_address": [
    {
      "host": "127.0.0.1",
      "port": 8888,
      "protocol": 3,
      "id": "127.0.0.1:8888",
      "formats": [
        0,1
      ],
      "environment": "debug"
    }
  ],
  "register_period": 300000,
  "renew_period": [
    {
      "internal_seconds": 10,
      "times": 20,
      "timeout_seconds": 60
    },
    {
      "internal_seconds": 30,
      "times": -1,
      "timeout_seconds": 3600
    }
  ],
  "message_queue": {
    "brokers": "10.29.86.75:9092"
  },
  "config_environment": {
    "default": "debug",
    "candidates": [
      "debug",
      "alpha",
      "beta",
      "gamma",
      "prod"
    ]
  },
  "register_port_mapping": [
    {
      "real_port": 7777,
      "mapping_port": 7777
    }
  ],
  "tracer": {
    "enabled": {
      "value": false
    },
    "process": {
      "enabled": {
        "value": false
      },
      "local": {
        "enabled": {
          "value": false
        }
      }
    }
  }
}