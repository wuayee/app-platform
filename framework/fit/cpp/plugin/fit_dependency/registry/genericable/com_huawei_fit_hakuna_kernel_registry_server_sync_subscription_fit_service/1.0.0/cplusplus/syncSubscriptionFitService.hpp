/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 * Description:
 * Author: auto generated by FIT IDL
 * Date:
 */

#ifndef COM_HUAWEI_FIT_HAKUNA_KERNEL_REGISTRY_SERVER_SYNCSUBSCRIPTIONFITSERVICE_G_H
#define COM_HUAWEI_FIT_HAKUNA_KERNEL_REGISTRY_SERVER_SYNCSUBSCRIPTIONFITSERVICE_G_H

#include <fit/external/framework/proxy_client.hpp>

#include <component/com_huawei_fit_registry_registry_common/1.0.0/cplusplus/registryCommon.hpp>
#include <fit/stl/string.hpp>
#include <fit/stl/vector.hpp>
#include <fit/memory/fit_base.hpp>

namespace fit {
namespace hakuna {
namespace kernel {
namespace registry {
namespace server {
struct SyncSubscriptionService : public FitBase {
    // 订阅的服务
    ::fit::registry::Fitable *fitable { nullptr };
    // 监听者地址
    ::fit::registry::Address *listenerAddress { nullptr };
    // 操作类型0增加，1删除
    int32_t operateType {};
    Fit::string callbackFitId {};
};

struct __syncSubscriptionFitService {
    using InType = ::Fit::Framework::ArgumentsIn<const Fit::vector<SyncSubscriptionService> *>;
    using OutType = ::Fit::Framework::ArgumentsOut<int32_t **>;
};

class syncSubscriptionFitService : public ::Fit::Framework::ProxyClient<FitCode(__syncSubscriptionFitService::InType,
    __syncSubscriptionFitService::OutType)> {
public:
    static constexpr const char *GENERIC_ID = "e903c5c50c3a49539d5b9aac90198963";
    syncSubscriptionFitService()
        : ::Fit::Framework::ProxyClient<FitCode(__syncSubscriptionFitService::InType,
        __syncSubscriptionFitService::OutType)>(GENERIC_ID)
    {}
    ~syncSubscriptionFitService() = default;
};
}
}
}
}
}

#endif