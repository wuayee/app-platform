/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 * Description:
 * Author: auto generated by FIT IDL
 * Date:
 */

#ifndef COM_HUAWEI_FIT_MATATA_TAGCENTER_TAGGER_TAG_H
#define COM_HUAWEI_FIT_MATATA_TAGCENTER_TAGGER_TAG_H

#include <fit/external/framework/proxy_client.hpp>

#include <fit/stl/string.hpp>
#include <fit/stl/vector.hpp>

namespace fit {
namespace matata {
namespace tagCenter {
namespace tagger {
struct __tag {
    using InType =
        ::Fit::Framework::ArgumentsIn<const Fit::string *, const Fit::vector<Fit::string> *, const Fit::string *>;
    using OutType = ::Fit::Framework::ArgumentsOut<Fit::vector<Fit::string> **>;
};

/**
 * 通过执行规则引擎中的脚本，筛选出符合条件的标签
 *
 * @param environment 表示标签所属的环境。
 * @param taggerIds 表示待筛选的标签id。
 * @param parameter 表示待规则引擎执行时使用的参数的JSON字符串表现形式。
 * @return 表示筛选出的标签名。
 */
class tag : public ::Fit::Framework::ProxyClient<FitCode(__tag::InType, __tag::OutType)> {
public:
    static constexpr const char *GENERIC_ID = "41151994d1e74245ad1416b75c8eff39";
    tag() : ::Fit::Framework::ProxyClient<FitCode(__tag::InType, __tag::OutType)>(GENERIC_ID) {}
    ~tag() = default;
};
}
}
}
}

#endif