/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 * Description:
 * Author: auto generated by FIT IDL
 * Date:
 */

#ifndef COM_HUAWEI_FIT_HAKUNA_KERNEL_REGISTRY_LISTENER_GETFITABLEADDRESSES_G_H
#define COM_HUAWEI_FIT_HAKUNA_KERNEL_REGISTRY_LISTENER_GETFITABLEADDRESSES_G_H

#include <fit/external/framework/proxy_client.hpp>

#include <component/com_huawei_fit_hakuna_kernel_registry_shared_Fitable_instance/1.0.0/cplusplus/FitableInstance.hpp>
#include <component/com_huawei_fit_hakuna_kernel_shared_Fitable/1.0.0/cplusplus/Fitable.hpp>
namespace fit {
namespace hakuna {
namespace kernel {
namespace registry {
namespace listener {
struct __getFitableAddresses {
    using InType = ::Fit::Framework::ArgumentsIn<const ::fit::hakuna::kernel::shared::Fitable *>;
    using OutType = ::Fit::Framework::ArgumentsOut<::fit::hakuna::kernel::registry::shared::FitableInstance **>;
};

/**
 *
 * @param fitable
 * @return
 */
class getFitableAddresses
    : public ::Fit::Framework::ProxyClient<FitCode(__getFitableAddresses::InType, __getFitableAddresses::OutType)> {
public:
    static constexpr const char *GENERIC_ID = "bcad5d59d90b4ee88f195cd7356389fc";
    getFitableAddresses()
        : ::Fit::Framework::ProxyClient<FitCode(__getFitableAddresses::InType, __getFitableAddresses::OutType)>(
        GENERIC_ID)
    {}
    explicit getFitableAddresses(ContextObj ctx)
        : ::Fit::Framework::ProxyClient<FitCode(__getFitableAddresses::InType, __getFitableAddresses::OutType)>(
        GENERIC_ID, ctx)
    {}
    ~getFitableAddresses() = default;
};
}
}
}
}
}

#endif
