/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 * Description:
 * Author: auto generated by FIT IDL
 * Date:
 */

#ifndef COM_HUAWEI_FIT_REGISTRY_REGISTRYCOMMON_C_H
#define COM_HUAWEI_FIT_REGISTRY_REGISTRYCOMMON_C_H

#include <fit/stl/string.hpp>
#include <fit/stl/vector.hpp>
#include <fit/memory/fit_base.hpp>

namespace fit {
namespace registry {
struct Address : public FitBase {
    Fit::string host {};
    int32_t port {};
    // 地址所在进程唯一标识，正常ip网络下可用host:port拼接或uuid作为唯一标识，心跳时进程上报给心跳服务时应使用该标识，用于进程下线时更新对应服务的状态
    Fit::string id {};
    /* *
     * rsocket------0
     * socket-------1
     * http---------2
     * grpc---------3
     * uc-----------10
     * shareMemory--11
     */
    int32_t protocol {};
    /* *
     * protobuf-----0
     * jackson------1
     */
    Fit::vector<int32_t> formats {};
    Fit::string environment {};
};

struct Worker : public FitBase {
    Address *address { nullptr };
    Fit::string token {};
};

struct Fitable : public FitBase {
    Fit::string genericId {};
    Fit::string genericVersion {};
    Fit::string fitId {};
    Fit::string fitVersion {};
};

struct ServiceMeta : public FitBase {
    Fitable *fitable { nullptr };
    Fit::string serviceName {};
    Fit::string pluginName {};
};

struct ServiceAddress : public FitBase {
    ServiceMeta *serviceMeta { nullptr };
    Fit::vector<Address> addressList {};
};
}
}

#endif