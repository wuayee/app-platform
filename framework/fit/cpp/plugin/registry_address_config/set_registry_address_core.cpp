/*
* Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
* Description:
* Author: auto generated by FIT IDL
* Date:
*/

#include <fit/external/framework/annotation/fitable_registrar.hpp>
#include <genericable/com_huawei_fit_hakuna_kernel_registry_server_set_registry_address/1.0.0/cplusplus/setRegistryAddress.hpp>
#include <fit/fit_code.h>
#include <fit/fit_log.h>
#include <fit/external/util/context/context_api.hpp>

namespace {
/**
 * 设置注册中心地址
 *
 * @param address
 * @return
 */
FitCode SetRegistryAddress(ContextObj ctx,
    const ::fit::registry::Address *address)
{
    if (address == nullptr) {
        FIT_LOG_ERROR("Address is nullptr.");
        return FIT_ERR_FAIL;
    }
    FIT_LOG_CORE("SetRegistryAddress Host : %s, port : %d, id : %s, protocol : %d, \
        formats size is: %lu, environment is %s.",
        address->host.c_str(), address->port, address->id.c_str(),
        address->protocol, address->formats.size(), address->environment.c_str());
    return FIT_ERR_SUCCESS;
}
}

FIT_REGISTRATIONS
{
    ::Fit::Framework::Annotation::Fitable(::SetRegistryAddress)
        .SetGenericId(fit::hakuna::kernel::registry::server::setRegistryAddress::GENERIC_ID)
        .SetFitableId("b8596df821d14f488adb553db909edcb");
}