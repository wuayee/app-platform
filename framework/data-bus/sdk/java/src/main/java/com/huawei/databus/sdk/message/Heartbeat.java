/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2024-2024. All rights reserved.
 */

// automatically generated by the FlatBuffers compiler, do not modify

package com.huawei.databus.sdk.message;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Heartbeat extends Table {
    public static void ValidateVersion() {Constants.FLATBUFFERS_23_5_26();}

    public static Heartbeat getRootAsHeartbeat(ByteBuffer _bb) {return getRootAsHeartbeat(_bb, new Heartbeat());}

    public static Heartbeat getRootAsHeartbeat(ByteBuffer _bb, Heartbeat obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public static int createHeartbeat(FlatBufferBuilder builder, long timeStamp) {
        builder.startTable(1);
        Heartbeat.addTimeStamp(builder, timeStamp);
        return Heartbeat.endHeartbeat(builder);
    }

    public static void startHeartbeat(FlatBufferBuilder builder) {builder.startTable(1);}

    public static void addTimeStamp(FlatBufferBuilder builder, long timeStamp) {
        builder.addInt(0,
                (int) timeStamp,
                (int) 0L);
    }

    public static int endHeartbeat(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static void finishHeartbeatBuffer(FlatBufferBuilder builder, int offset) {builder.finish(offset);}

    public static void finishSizePrefixedHeartbeatBuffer(FlatBufferBuilder builder,
            int offset) {builder.finishSizePrefixed(offset);}

    public void __init(int _i, ByteBuffer _bb) {__reset(_i, _bb);}

    public Heartbeat __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public long timeStamp() {
        int o = __offset(4);
        return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public Heartbeat get(int j) {return get(new Heartbeat(), j);}

        public Heartbeat get(Heartbeat obj, int j) {return obj.__assign(__indirect(__element(j), bb), bb);}
    }
}
