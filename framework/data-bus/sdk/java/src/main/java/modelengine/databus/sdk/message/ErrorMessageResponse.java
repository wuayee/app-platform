/*---------------------------------------------------------------------------------------------
 *  Copyright (c) 2025 Huawei Technologies Co., Ltd. All rights reserved.
 *  This file is a part of the ModelEngine Project.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

// automatically generated by the FlatBuffers compiler, do not modify

package modelengine.databus.sdk.message;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ErrorMessageResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static ErrorMessageResponse getRootAsErrorMessageResponse(ByteBuffer _bb) { return getRootAsErrorMessageResponse(_bb, new ErrorMessageResponse()); }
  public static ErrorMessageResponse getRootAsErrorMessageResponse(ByteBuffer _bb, ErrorMessageResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ErrorMessageResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte errorType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createErrorMessageResponse(FlatBufferBuilder builder,
      byte errorType) {
    builder.startTable(1);
    ErrorMessageResponse.addErrorType(builder, errorType);
    return ErrorMessageResponse.endErrorMessageResponse(builder);
  }

  public static void startErrorMessageResponse(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addErrorType(FlatBufferBuilder builder, byte errorType) { builder.addByte(0, errorType, 0); }
  public static int endErrorMessageResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishErrorMessageResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedErrorMessageResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ErrorMessageResponse get(int j) { return get(new ErrorMessageResponse(), j); }
    public ErrorMessageResponse get(ErrorMessageResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

