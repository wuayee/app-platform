<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="modelengine.jade.store.repository.pgsql.mapper.PluginMapper">
    <resultMap id="Plugin" type="modelengine.jade.store.repository.pgsql.entity.PluginDo">
        <result column="id" property="id"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="creator" property="creator"/>
        <result column="modifier" property="modifier"/>
        <result column="plugin_id" property="pluginId"/>
        <result column="plugin_name" property="pluginName"/>
        <result column="extension" property="extension"/>
        <result column="deploy_status" property="deployStatus"/>
        <result column="is_builtin" property="isBuiltin"/>
        <result column="source" property="source"/>
        <result column="icon" property="icon"/>
    </resultMap>
    <insert id="addPlugin" parameterType="modelengine.jade.store.repository.pgsql.entity.PluginDo">
        insert into store_plugin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="creator != null">"creator",</if>
            <if test="modifier != null">"modifier",</if>
            <if test="pluginId != null">"plugin_id",</if>
            <if test="pluginName != null">"plugin_name",</if>
            <if test="extension != null">"extension",</if>
            <if test="deployStatus != null">"deploy_status",</if>
            <if test="source != null">"source",</if>
            <if test="icon != null">"icon",</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="creator != null">#{creator},</if>
            <if test="modifier != null">#{modifier},</if>
            <if test="pluginId != null">#{pluginId},</if>
            <if test="pluginName != null">#{pluginName},</if>
            <if test="extension != null">cast(#{extension} as json),</if>
            <if test="deployStatus != null">#{deployStatus},</if>
            <if test="source != null">#{source},</if>
            <if test="icon != null">#{icon},</if>
        </trim>
    </insert>
    <sql id="getCount">
        select count(distinct i."plugin_id")
        from "store_plugin" i
        left join "store_plugin_tool" pt on i."plugin_id" = pt."plugin_id"
        left join (select t."tool_unique_name", string_agg(t."name", ',' order by t."name") as tags
                    from "store_tag" t
                    group by t."tool_unique_name") tg on tg."tool_unique_name" = pt."tool_unique_name"
    </sql>
    <sql id="getOrSearchConditions">
        <if test="mode == 'AND' and includeTags != null and includeTags.size() > 0">
            and tg.tags is not null
            and (
            <foreach collection="includeTags" item="tag" open="" close="" separator=" and ">
                tg.tags ~ ('(^|,)' || #{tag} || '($|,)')
            </foreach>
            )
        </if>
        <if test="mode == 'OR' and includeTags != null and includeTags.size() > 0">
            and tg.tags is not null
            and (
            <foreach collection="includeTags" item="tag" open="" close="" separator=" or ">
                tg.tags ~ ('(^|,)' || #{tag} || '($|,)')
            </foreach>
            )
        </if>
        <if test="excludeTags != null and excludeTags.size() > 0">
            and ( tg.tags is null
            or not (
            <foreach collection="excludeTags" item="tag" open="" close="" separator=" or ">
                tg.tags ~ ('(^|,)' || #{tag} || '($|,)')
            </foreach>
            )
            )
        </if>
    </sql>
    <sql id="sortAndLimit">
        order by i."updated_time" desc
        <if test="offset != null and offset >= 0">
            offset #{offset}
        </if>
        <if test="limit != null and limit > 0">
            limit #{limit}
        </if>
    </sql>
    <select id="getPluginByPluginId" resultMap="Plugin">
        select "creator", "modifier", "plugin_id", "plugin_name", "extension", "deploy_status", "is_builtin", "source", "icon"
        from "store_plugin"
        where "plugin_id" = #{pluginId}
    </select>
    <select id="getPluginsByDeployStatus" resultMap="Plugin">
        select "creator", "modifier", "plugin_id", "plugin_name", "extension", "deploy_status", "is_builtin", "source", "icon"
        from "store_plugin"
        where "deploy_status" = #{deployStatus}
    </select>
    <select id="getPluginsCountByDeployStatus">
        select count("plugin_id")
        from "store_plugin"
        where "deploy_status" = #{deployStatus}
    </select>
    <update id="updateDeployStatus">
        update "store_plugin"
        set "deploy_status" = #{deployStatus}
        where "plugin_id" in
        <foreach collection="pluginIdList" item="pluginId" open="(" close=")" separator=",">
            #{pluginId}
        </foreach>
    </update>
    <select id="getPlugins" parameterType="modelengine.jade.store.entity.query.PluginQuery" resultMap="Plugin">
        select distinct i."updated_time", i."creator", i."modifier", i."plugin_id", i."plugin_name",
        i."extension"::text, i."deploy_status", i."is_builtin", i."source", i."icon"
        from "store_plugin" i
        left join "store_plugin_tool" pt on i."plugin_id" = pt."plugin_id"
        left join (select t."tool_unique_name", string_agg(t."name", ',' order by t."name") as tags
        from "store_tag" t
        group by t."tool_unique_name") tg on tg."tool_unique_name" = pt."tool_unique_name"
        <where>
            <if test="isBuiltin != null and isBuiltin and creator != null and creator != ''">
                and (i."is_builtin" = true or i."creator" ilike '%\' || #{creator} || '%' ESCAPE '\')
            </if>
            <if test="isBuiltin != null and !isBuiltin and creator != null and creator != ''">
                and (i."is_builtin" = false and i."creator" ilike '%\' || #{creator} || '%' ESCAPE '\')
            </if>
            <if test="isBuiltin != null and creator == null">
                and i."is_builtin" = #{isBuiltin}
            </if>
            <if test="isBuiltin == null and creator != null and creator != ''">
                and i."creator" ilike '%\' || #{creator} || '%' ESCAPE '\'
            </if>
            <if test="isDeployed != null and isDeployed">
                and (i."deploy_status" = 'DEPLOYED' or i."deploy_status" = 'RELEASED')
            </if>
            <include refid="getOrSearchConditions"/>
            <if test="toolName != null and toolName != ''">
                and (i."plugin_name" ilike '%\' || #{toolName} || '%' ESCAPE '\'
                or pt."tool_name" ilike '%\' || #{toolName} || '%' ESCAPE '\')
            </if>
        </where>
        <include refid="sortAndLimit"/>
    </select>
    <select id="getPluginsCount" parameterType="modelengine.jade.store.entity.query.PluginQuery">
        <include refid="getCount"/>
        <where>
            <if test="isBuiltin != null and isBuiltin and creator != null and creator != ''">
                and (i."is_builtin" = true or i."creator" ilike '%\' || #{creator} || '%' ESCAPE '\')
            </if>
            <if test="isBuiltin != null and !isBuiltin and creator != null and creator != ''">
                and (i."is_builtin" = false and i."creator" ilike '%\' || #{creator} || '%' ESCAPE '\')
            </if>
            <if test="isBuiltin != null and creator == null">
                and i."is_builtin" = #{isBuiltin}
            </if>
            <if test="isBuiltin == null and creator != null and creator != ''">
                and i."creator" ilike '%\' || #{creator} || '%' ESCAPE '\'
            </if>
            <if test="isDeployed != null and isDeployed">
                and (i."deploy_status" = 'DEPLOYED' or i."deploy_status" = 'RELEASED')
            </if>
            <include refid="getOrSearchConditions"/>
            <if test="toolName != null and toolName != ''">
                and (i."plugin_name" ilike '%\' || #{toolName} || '%' ESCAPE '\'
                or pt."tool_name" ilike '%\' || #{toolName} || '%' ESCAPE '\')
            </if>
        </where>
    </select>
    <delete id="deletePlugin" parameterType="String">
        delete
        from "store_plugin"
        where "plugin_id" = #{pluginId};
    </delete>
</mapper>