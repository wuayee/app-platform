<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="modelengine.jade.app.engine.metrics.mapper.MetricsAccessMapper">
    <resultMap id="MetricAccess" type="modelengine.jade.app.engine.metrics.po.MetricsAccessPo" >
        <result column="id" property="id"/>
        <result column="app_id" property="appId"/>
        <result column="total_access" property="totalAccess"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <!-- 批量插入metric_access -->
    <insert id="insertMetricAccessBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO metrics_access (app_id, total_access, create_time)
        VALUES
        <foreach collection="metricsAccessList" item="item" separator=",">
            (#{item.appId}, #{item.totalAccess}, #{item.createTime})
        </foreach>
    </insert>

    <select id="getHourlyAccessData" resultType="map">
        WITH hourly_series AS (
            SELECT generate_series(
                           DATE_TRUNC('hour', #{startTime}::timestamp),
                           DATE_TRUNC('hour', #{endTime}::timestamp),
                           '1 hour'::interval
                       ) AS time_unit
        ),
             access_data AS (
                 SELECT
                     DATE_TRUNC('hour', create_time) AS time_unit,
                     SUM(total_access) AS access_count
                 FROM
                     metrics_access
                WHERE app_id in
                <foreach collection="appIds" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                 AND create_time BETWEEN #{startTime} AND #{endTime}
                 GROUP BY
                     DATE_TRUNC('hour', create_time)
             )
        SELECT
            TO_CHAR(hs.time_unit, 'YYYY-MM-DD HH24:MI') AS time_unit,
            COALESCE(ad.access_count, 0) AS access_count
        FROM
            hourly_series hs
                LEFT JOIN
            access_data ad ON hs.time_unit = ad.time_unit
        ORDER BY
            hs.time_unit;
    </select>

    <select id="getDailyAccessData" resultType="map">
        WITH daily_series AS (
            SELECT generate_series(
                           DATE_TRUNC('day', #{startTime}::timestamp),
                           DATE_TRUNC('day', #{endTime}::timestamp),
                           '1 day'::interval
                       ) AS time_unit
        ),
             access_data AS (
                 SELECT
                     DATE_TRUNC('day', create_time) AS time_unit,
                     SUM(total_access) AS access_count
                 FROM
                     metrics_access
                 WHERE app_id in
                 <foreach collection="appIds" item="id" index="index" open="(" close=")" separator=",">
                     #{id}
                 </foreach>
                 AND create_time BETWEEN #{startTime} AND #{endTime}
                 GROUP BY
                     DATE_TRUNC('day', create_time)
             )
        SELECT
            TO_CHAR(ds.time_unit, 'YYYY-MM-DD') AS time_unit,
            COALESCE(ad.access_count, 0) AS access_count
        FROM
            daily_series ds
                LEFT JOIN
            access_data ad ON ds.time_unit = ad.time_unit
        ORDER BY
            ds.time_unit;
    </select>


</mapper>