<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.jade.app.engine.eval.mapper.EvalDataMapper" >
    <resultMap id="EvalData" type="com.huawei.jade.app.engine.eval.po.EvalDataPo" >
        <result column="id" property="id"/>
        <result column="dataset_id" property="datasetId"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="input" property="input"/>
        <result column="output" property="output"/>
    </resultMap>

    <insert id="insert" parameterType="com.huawei.jade.app.engine.eval.po.EvalDataPo" useGeneratedKeys="true" keyProperty="id">
        insert into eval_data ("dataset_id", "create_time", "modify_time", "input", "output")
        values (#{datasetId}, #{createTime}, #{modifyTime}, #{input}, #{output})
    </insert>

    <insert id="insertAll" parameterType="com.huawei.jade.app.engine.eval.po.EvalDataPo" useGeneratedKeys="true" keyProperty="id">
        insert into eval_data ("dataset_id", "create_time", "modify_time", "input", "output")
        values
        <foreach collection="list" item="data" separator=",">
            (#{data.datasetId}, #{data.createTime}, #{data.modifyTime}, #{data.input}, #{data.output})
        </foreach>
    </insert>

    <update id="updateById" parameterType="com.huawei.jade.app.engine.eval.po.EvalDataPo">
        update eval_data
        set modify_time = #{modifyTime}, input = #{input}, output = #{output}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from eval_data
        where id = #{id}
    </delete>

    <select id="getById" resultMap="EvalData">
        select "id", "dataset_id", "create_time", "modify_time", "input", "output"
        from eval_data
        where id = #{id}
        order by modify_time desc, create_time desc
    </select>

    <select id="getByDatasetId" resultMap="EvalData">
        select "id", "dataset_id", "create_time", "modify_time", "input", "output"
        from eval_data
        where dataset_id = #{datasetId}
        order by modify_time desc, create_time desc
    </select>

    <select id="getCountByDatasetId" resultType="java.lang.Long">
        select count(*)
        from eval_data
        where dataset_id = #{datasetId}
    </select>
</mapper>