<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.fit.jober.aipp.mapper.AppBuilderAppMapper">
    <resultMap id="BaseResultMap" type="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="config_id" property="configId"/>
        <result column="flow_graph_id" property="flowGraphId"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="type" property="type"/>
        <result column="version" property="version"/>
        <result column="create_by" property="createBy"/>
        <result column="create_at" property="createAt"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_at" property="updateAt"/>
        <result column="attributes" property="attributes"/>
        <result column="state" property="state"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , name, config_id, flow_graph_id, tenant_id, type, version, attributes, state, create_by, create_at, update_by, update_at
    </sql>

    <select id="selectWithId" resultMap="BaseResultMap"
            resultType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        select
        <include refid="Base_Column_List"/>
        from app_builder_app
        where id = #{id}
    </select>

    <select id="selectWithTenantId" resultMap="BaseResultMap"
            resultType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        select
        <include refid="Base_Column_List"/>
        from app_builder_app
        where tenant_id = #{tenantId}
    </select>

    <select id="selectByTenantIdWithPage" resultMap="BaseResultMap"
            resultType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        select
        <include refid="Base_Column_List"/>
        from (
            SELECT DISTINCT ON ( "name" ) * FROM app_builder_app where tenant_id = #{tenantId}
            <if test="cond.type != null">
                and type = #{cond.type}
            </if>
            <if test="cond.state != null">
                and state = #{cond.state}
            </if>
            <if test="cond != null and cond.name != null and cond.name != ''">
                and name ilike '%' || #{cond.name} || '%'
            </if>
            <if test="cond.excludeNames != null and !cond.excludeNames.isEmpty()">
                AND name NOT IN
                <foreach item="excludeName" collection="cond.excludeNames" open="(" separator="," close=")">
                    #{excludeName}
                </foreach>
            </if>
            ORDER BY
                "name", create_at DESC
        ) as sub
        ORDER BY create_at DESC offset #{offset} limit #{limit}
    </select>

    <select id="selectWithCondition" resultMap="BaseResultMap"
            resultType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        select
        <include refid="Base_Column_List"/>
        from app_builder_app
        <where>
            true
            <if test="tenantId!=null">
                and tenant_id = #{tenantId}
            </if>
            <if test="name!=null">
                and name = #{name}
            </if>
            <if test="type!=null">
                and type = #{type}
            </if>
            <if test="ids != null and ids.size() > 0">
                and id in
                <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="countByTenantId" resultType="long">
        select count(*) from (
        select
        DISTINCT ON (name) *
        from app_builder_app
        where tenant_id = #{tenantId}
        <if test="cond.type != null">
            and type = #{cond.type}
        </if>
        <if test="cond.state != null">
            and state = #{cond.state}
        </if>
        <if test="cond.name != null">
            and name ilike '%' || #{cond.name} || '%'
        </if>
        <if test="cond.excludeNames != null and !cond.excludeNames.isEmpty()">
            AND name NOT IN
            <foreach item="excludeName" collection="cond.excludeNames" open="(" separator="," close=")">
                #{excludeName}
            </foreach>
        </if>
        ) as latest_records;
    </select>

    <insert id="insertOne" parameterType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        insert into app_builder_app (
        <include refid="Base_Column_List"/>
        )
        values (#{id}, #{name}, #{configId}, #{flowGraphId}, #{tenantId}, #{type}, #{version}, #{attributes}::jsonb,
        #{state}, #{createBy}, #{createAt}, #{updateBy}, #{updateAt})
    </insert>

    <update id="updateOne" parameterType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        update app_builder_app
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="configId != null">
                config_id = #{configId},
            </if>
            <if test="flowGraphId != null">
                flow_graph_id = #{flowGraphId},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="attributes != null">
                attributes = #{attributes}::jsonb,
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createAt != null">
                create_at = #{createAt},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt}
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="selectWithStoreId" resultMap="BaseResultMap"
            resultType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        select
        <include refid="Base_Column_List"/>
        from app_builder_app
        where attributes ->> 'store_id' in
        <foreach collection="storeIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <update id="updateAppWithStoreId" parameterType="com.huawei.fit.jober.aipp.po.AppBuilderAppPO">
        update app_builder_app
        set attributes = jsonb_set(attributes::jsonb, '{store_id}',to_jsonb(#{uniqueName}), true)
        where id = #{id} and version = #{version}
    </update>

    <delete id="delete">
        DELETE FROM
            app_builder_app
        where id = #{appId}
    </delete>
</mapper>