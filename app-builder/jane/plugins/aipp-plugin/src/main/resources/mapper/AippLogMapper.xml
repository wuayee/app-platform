<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="modelengine.fit.jober.aipp.mapper.AippLogMapper">
    <resultMap id="BaseResultMap" type="modelengine.fit.jober.aipp.entity.AippInstLog">
        <result column="log_id" property="logId"/>
        <result column="aipp_id" property="aippId"/>
        <result column="version" property="version"/>
        <result column="aipp_type" property="aippType"/>
        <result column="instance_id" property="instanceId"/>
        <result column="log_data" property="logData"/>
        <result column="log_type" property="logType"/>
        <result column="create_at" property="createAt"/>
        <result column="create_by" property="createUserAccount"/>
        <result column="path" property="path"/>
    </resultMap>
    <sql id="Base_Column_List">
        log_id
        , aipp_id, version, aipp_type, instance_id, log_data, log_type, create_at, create_by, path
    </sql>

    <sql id="Recent_Instance_List">
        select instance_id
        from (select instance_id, create_at, row_number() over (partition by instance_id order by create_at desc) rn
              from aipp_instance_log
              where create_by = #{createUserAccount}
                and aipp_id = #{aippId}
                and aipp_type = #{aippType}
                and is_deleted = 0) t
        where t.rn = 1
        order by t.create_at desc
    </sql>

    <select id="selectRecentAfterResume" resultType="string">
        SELECT instance_id
        FROM (
                 SELECT instance_id,
                        create_at,
                        ROW_NUMBER() OVER ( PARTITION BY instance_id ORDER BY create_at DESC ) rn
                 FROM aipp_instance_log
                 WHERE create_by = #{createUserAccount}
                   AND aipp_id = #{aippId}
                   AND aipp_type = #{aippType}
                   AND is_deleted = 0
                   AND log_id >=
                       (
                           SELECT log_id
                           FROM aipp_instance_log
                           WHERE log_data ->> 'form_args' like '%\"fileContent\":%'
                   AND aipp_id = #{aippId}
                   AND create_by = #{createUserAccount}
                 ORDER BY
                     create_at DESC
                     LIMIT 1
             ) ) T
        WHERE
            T.rn = 1
        ORDER BY
            T.create_at DESC
    </select>

    <select id="selectRecentByAippId" resultMap="BaseResultMap"
            resultType="modelengine.fit.jober.aipp.entity.AippInstLog">
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        where instance_id in (
        <include refid="Recent_Instance_List"/>
        )
        and is_deleted = 0
        limit 5
    </select>

    <select id="selectWithCondition" parameterType="modelengine.fit.jober.aipp.dto.aipplog.AippLogQueryCondition"
            resultMap="BaseResultMap"
            resultType="modelengine.fit.jober.aipp.entity.AippInstLog">
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        <where>
            true
            <if test="aippId!=null">
                and aipp_id = #{aippId}
            </if>
            <if test="instanceId!=null">
                and instance_id = #{instanceId}
            </if>
            <if test="afterAt!=null">
                and create_at >= #{afterAt}
            </if>
                and is_deleted = 0
        </where>
        order by log_id
    </select>

    <select id="selectNormalInstanceIdOrderByTimeDesc">
        <include refid="Recent_Instance_List_By_AippIds"/>
    </select>

    <select id="selectLastInstanceFormLog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        <where>
            log_type = 'FORM' and is_deleted = 0
            <if test="instanceId!=null">
                and instance_id = #{instanceId}
            </if>
        </where>
        order by create_at desc
        limit 1
    </select>

    <update id="deleteByType">
        update aipp_instance_log
        set is_deleted = 1
        where aipp_id = #{aippId}
        and create_by = #{createUserAccount}
        and aipp_type = #{aippType}
        <if test="instanceIdExclude != null">
            and instance_id != #{instanceIdExclude}
        </if>
    </update>

    <update id="delete">
        update aipp_instance_log
        set is_deleted = 1
        where aipp_id in
        <foreach collection="aippIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and create_by = #{createUserAccount}
        and aipp_type = #{aippType}
        <if test="instanceIdExclude != null">
            and instance_id != #{instanceIdExclude}
        </if>
    </update>

    <insert id="insertOne" parameterType="modelengine.fit.jober.aipp.dto.aipplog.AippLogCreateDto"
            useGeneratedKeys="true" keyProperty="logId">
        insert into aipp_instance_log (aipp_id, version, aipp_type, instance_id, log_data, log_type, create_by, path)
        values (#{aippId}, #{version}, #{aippType}, #{instanceId}, #{logData}::jsonb, #{logType}, #{createUserAccount},
                #{path})
    </insert>

    <update id="updateOne">
        update aipp_instance_log
        set log_data = #{newLogData}::jsonb
        where log_id = #{logId} and is_deleted = 0
    </update>

    <update id="updateDataAndType">
        update aipp_instance_log
        set log_data = #{newLogData}::jsonb, log_type = #{logType}
        where log_id = #{logId} and is_deleted = 0
    </update>

    <update id="updateLogType">
        update aipp_instance_log
        set log_type = #{logType}
        where log_id = #{logId} and is_deleted = 0
    </update>

    <select id="selectRecentInstanceId" resultType="string">
        <include refid="Recent_Instance_List"/>
        limit #{number}
    </select>

    <select id="selectRecentInstanceIdByAippIds" resultType="string">
        <include refid="Recent_Instance_List_By_AippIds"/>
        limit #{number}
    </select>

    <sql id="Recent_Instance_List_By_AippIds">
        select instance_id
        from (select instance_id, create_at, row_number() over (partition by instance_id order by create_at desc) rn
        from aipp_instance_log
        where create_by = #{createUserAccount}
        and is_deleted = 0
        and aipp_id in
        <foreach collection="aippIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and aipp_type = #{aippType}) t
        where t.rn = 1
        order by t.create_at desc
    </sql>

    <!--根据 path 查询 instanceId 的历史记录（包括当前实例的信息，以及子实例的FORM待确认表单信息）-->
    <select id="getFullLogsByInstanceIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        where is_deleted = 0
        AND
        path IN
        <foreach collection="instanceIds" item="instanceId" separator="," close=")" open="(">
            '/'||#{instanceId}
        </foreach>
        UNION ALL
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        where is_deleted = 0
        and
        <foreach collection="instanceIds" item="instanceId" separator="or" close=")" open="(">
            path LIKE '/'||#{instanceId}||'/%'
        </foreach>
        and log_type = 'FORM'
    </select>

    <select id="getParentPath" resultType="string">
        select
        path
        from aipp_instance_log
        <where>
            instance_id = #{parentId}
            and is_deleted = 0
        </where>
        LIMIT 1
    </select>

    <update id="deleteInstanceLog">
        update aipp_instance_log
        set is_deleted = 1
        where path Like '/'||#{instanceId}||'%'
    </update>

    <select id="getLogsByInstanceId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        where instance_id= #{instanceId} and is_deleted = 0
    </select>

    <select id="getLogsByInstanceIdAndLogTypes" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from aipp_instance_log
        where instance_id= #{instanceId} and is_deleted = 0
        <if test="logTypes != null and logTypes.size > 0">
            and log_type in
            <foreach collection="logTypes" index="index" item="item" open="(" separator=", " close=")">
                #{item}
            </foreach>
        </if>
        order by create_at desc
    </select>

    <update id="deleteByInstanceIds" parameterType="java.util.List">
        UPDATE aipp_instance_log
        set is_deleted = 1
        where
        <foreach collection="instanceIds" item="id" separator=" OR ">
            path LIKE '/' || #{id} || '%'
        </foreach>
    </update>

    <update id="deleteInstanceLogs">
        UPDATE aipp_instance_log
        set is_deleted = 1
        where log_id in
        <foreach collection="logIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>